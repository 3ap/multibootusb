# Generic entries for unknown ISO files
if [ -e $isopath/CorePlus-*.iso ]; then
  for isofile in $isopath/CorePlus-*.iso; do
    regexp --set=isoname "$isopath/(.*)" "$isofile"
    submenu "$isoname ->" "$isofile" {
      isofile="$2"
      loopback loop "$isofile"
      menuentry "Boot Core Plus with default FLWM topside" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=flwm_topside"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core Plus with Joe's Window Manager" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=jwm"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core Plus with ICE Window Manager" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=icewm"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core Plus with Fluxbox Window Manager" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=fluxbox"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core Plus with Hackedbox Window Manager" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=hackedbox"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core Plus with Openbox Window Manager" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=openbox"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core Plus with FLWM Classic Window Manager" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps desktop=flwm"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core with only X/GUI (TinyCore)" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps lst=xbase.lst base desktop=flwm_topside"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core with X/GUI (TinyCore) + Installation Extension" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps lst=xibase.lst base desktop=flwm_topside"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core with X/GUI (TinyCore) + Wifi + Firmware" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde showapps lst=xfbase.lst base desktop=flwm_topside"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core to command line only" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 base"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
      menuentry "Boot Core without embedded extensions with waitusb=5" "$isofile" {
        isofile="$2"
        bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 waitusb=5"
        linux (loop)/boot/vmlinuz $bootoptions
        initrd (loop)/boot/core.gz
      }
    }
  done
fi
